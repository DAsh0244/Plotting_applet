# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Plotting_GUI.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Plotting_Gui(object):
    def setupUi(self, Plotting_Gui):
        Plotting_Gui.setObjectName(_fromUtf8("Plotting_Gui"))
        Plotting_Gui.resize(788, 591)
        self.centralwidget = QtGui.QWidget(Plotting_Gui)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.gridLayout = QtGui.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.Plot_2 = PlotWidget(self.centralwidget)
        self.Plot_2.setEnabled(True)
        self.Plot_2.setAutoFillBackground(False)
        self.Plot_2.setObjectName(_fromUtf8("Plot_2"))
        self.gridLayout.addWidget(self.Plot_2, 1, 0, 1, 1)
        self.Plot_1 = PlotWidget(self.centralwidget)
        self.Plot_1.setObjectName(_fromUtf8("Plot_1"))
        self.gridLayout.addWidget(self.Plot_1, 0, 0, 1, 1)
        self.Plot_2.raise_()
        self.Plot_1.raise_()
        self.gridLayout_2 = QtGui.QGridLayout()
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
        self.PortDropDown = QtGui.QComboBox(self.centralwidget)
        self.PortDropDown.setObjectName(_fromUtf8("PortDropDown"))
        self.gridLayout_2.addWidget(self.PortDropDown, 1, 1, 1, 1)
        self.BaudDropDown = QtGui.QComboBox(self.centralwidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BaudDropDown.sizePolicy().hasHeightForWidth())
        self.BaudDropDown.setSizePolicy(sizePolicy)
        self.BaudDropDown.setEditable(True)
        self.BaudDropDown.setObjectName(_fromUtf8("BaudDropDown"))
        self.gridLayout_2.addWidget(self.BaudDropDown, 1, 2, 1, 1)
        self.Plot_Button = QtGui.QPushButton(self.centralwidget)
        self.Plot_Button.setObjectName(_fromUtf8("Plot_Button"))
        self.gridLayout_2.addWidget(self.Plot_Button, 1, 0, 1, 1)
        self.FFT_button = QtGui.QPushButton(self.centralwidget)
        self.FFT_button.setObjectName(_fromUtf8("FFT_button"))
        self.gridLayout_2.addWidget(self.FFT_button, 2, 1, 1, 1)
        self.Write_Button = QtGui.QPushButton(self.centralwidget)
        self.Write_Button.setObjectName(_fromUtf8("Write_Button"))
        self.gridLayout_2.addWidget(self.Write_Button, 2, 0, 1, 1)
        self.DualPlot = QtGui.QCheckBox(self.centralwidget)
        self.DualPlot.setObjectName(_fromUtf8("DualPlot"))
        self.gridLayout_2.addWidget(self.DualPlot, 2, 2, 1, 1)
        self.Port_Label = QtGui.QLabel(self.centralwidget)
        self.Port_Label.setAlignment(QtCore.Qt.AlignCenter)
        self.Port_Label.setObjectName(_fromUtf8("Port_Label"))
        self.gridLayout_2.addWidget(self.Port_Label, 0, 1, 1, 1)
        self.Baud_Label = QtGui.QLabel(self.centralwidget)
        self.Baud_Label.setAlignment(QtCore.Qt.AlignCenter)
        self.Baud_Label.setObjectName(_fromUtf8("Baud_Label"))
        self.gridLayout_2.addWidget(self.Baud_Label, 0, 2, 1, 1)
        self.gridLayout.addLayout(self.gridLayout_2, 2, 0, 1, 1)
        Plotting_Gui.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(Plotting_Gui)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 788, 21))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuFile = QtGui.QMenu(self.menubar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        self.menuConfig = QtGui.QMenu(self.menubar)
        self.menuConfig.setObjectName(_fromUtf8("menuConfig"))
        self.menuFile_type = QtGui.QMenu(self.menuConfig)
        self.menuFile_type.setToolTip(_fromUtf8(""))
        self.menuFile_type.setWhatsThis(_fromUtf8(""))
        self.menuFile_type.setObjectName(_fromUtf8("menuFile_type"))
        self.menuExport_Options = QtGui.QMenu(self.menuConfig)
        self.menuExport_Options.setObjectName(_fromUtf8("menuExport_Options"))
        self.menuInput_Bit_order = QtGui.QMenu(self.menuConfig)
        self.menuInput_Bit_order.setObjectName(_fromUtf8("menuInput_Bit_order"))
        self.menuMode = QtGui.QMenu(self.menuConfig)
        self.menuMode.setObjectName(_fromUtf8("menuMode"))
        Plotting_Gui.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(Plotting_Gui)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        Plotting_Gui.setStatusBar(self.statusbar)
        self.actionScan_Ports = QtGui.QAction(Plotting_Gui)
        self.actionScan_Ports.setObjectName(_fromUtf8("actionScan_Ports"))
        self.actionExit = QtGui.QAction(Plotting_Gui)
        self.actionExit.setObjectName(_fromUtf8("actionExit"))
        self.actionCSV = QtGui.QAction(Plotting_Gui)
        self.actionCSV.setCheckable(True)
        self.actionCSV.setObjectName(_fromUtf8("actionCSV"))
        self.actionTXT = QtGui.QAction(Plotting_Gui)
        self.actionTXT.setCheckable(True)
        self.actionTXT.setObjectName(_fromUtf8("actionTXT"))
        self.actionMAT = QtGui.QAction(Plotting_Gui)
        self.actionMAT.setCheckable(True)
        self.actionMAT.setObjectName(_fromUtf8("actionMAT"))
        self.File_Group = QtGui.QActionGroup(Plotting_Gui)
        self.File_Group.addAction(self.actionCSV)               #
        self.File_Group.addAction(self.actionTXT)               #
        self.File_Group.addAction(self.actionMAT)               #
        self.actionCSV.setChecked(True)                         #
        self.actionSeperate_Axis = QtGui.QAction(Plotting_Gui)
        self.actionSeperate_Axis.setCheckable(True)
        self.actionSeperate_Axis.setObjectName(_fromUtf8("actionSeperate_Axis"))
        self.actionCombined_Axis = QtGui.QAction(Plotting_Gui)
        self.actionCombined_Axis.setCheckable(True)
        self.actionCombined_Axis.setObjectName(_fromUtf8("actionCombined_Axis"))
        self.Axis_Group = QtGui.QActionGroup(Plotting_Gui)      #
        self.Axis_Group.addAction(self.actionSeperate_Axis)     #
        self.Axis_Group.addAction(self.actionCombined_Axis)     #
        self.actionSeperate_Axis.setChecked(True)               #
        self.actionCapture_Depth = QtGui.QAction(Plotting_Gui)
        self.actionCapture_Depth.setObjectName(_fromUtf8("actionCapture_Depth"))
        self.actionNameSession = QtGui.QAction(Plotting_Gui)
        self.actionNameSession.setObjectName(_fromUtf8("actionNameSession"))
        self.actionInput_Bit_Depth = QtGui.QAction(Plotting_Gui)
        self.actionInput_Bit_Depth.setObjectName(_fromUtf8("actionInput_Bit_Depth"))
        self.actionMSB_first = QtGui.QAction(Plotting_Gui)
        self.actionMSB_first.setCheckable(True)
        self.actionMSB_first.setObjectName(_fromUtf8("actionMSB_first"))
        self.actionLSB_first = QtGui.QAction(Plotting_Gui)
        self.actionLSB_first.setCheckable(True)
        self.actionLSB_first.setObjectName(_fromUtf8("actionLSB_first"))
        self.Order_Group = QtGui.QActionGroup(Plotting_Gui)     #
        self.Order_Group.addAction(self.actionMSB_first)        #
        self.Order_Group.addAction(self.actionLSB_first)        #
        self.actionMSB_first.setChecked(True)                   #
        self.actionConsole = QtGui.QAction(Plotting_Gui)
        self.actionConsole.setObjectName(_fromUtf8("actionConsole"))
        self.actionSerial = QtGui.QAction(Plotting_Gui)
        self.actionSerial.setCheckable(True)
        self.actionSerial.setObjectName(_fromUtf8("actionSerial"))
        self.actionNI_DAQ = QtGui.QAction(Plotting_Gui)
        self.actionNI_DAQ.setCheckable(True)
        self.actionNI_DAQ.setObjectName(_fromUtf8("actionNI_DAQ"))
        self.Mode_Group = QtGui.QActionGroup(Plotting_Gui)  #
        self.Mode_Group.addAction(self.actionSerial)        #
        self.Mode_Group.addAction(self.actionNI_DAQ)        #
        self.actionSerial.setChecked(True)                  #
        self.menuFile.addAction(self.actionExit)
        self.menuFile.addAction(self.actionNameSession)
        self.menuFile.addAction(self.actionConsole)
        self.menuFile_type.addAction(self.actionCSV)
        self.menuFile_type.addAction(self.actionTXT)
        self.menuFile_type.addAction(self.actionMAT)
        self.menuExport_Options.addAction(self.actionSeperate_Axis)
        self.menuExport_Options.addAction(self.actionCombined_Axis)
        self.menuInput_Bit_order.addAction(self.actionMSB_first)
        self.menuInput_Bit_order.addAction(self.actionLSB_first)
        self.menuMode.addAction(self.actionSerial)
        self.menuMode.addAction(self.actionNI_DAQ)
        self.menuConfig.addAction(self.actionScan_Ports)
        self.menuConfig.addAction(self.menuFile_type.menuAction())
        self.menuConfig.addAction(self.menuExport_Options.menuAction())
        self.menuConfig.addAction(self.actionInput_Bit_Depth)
        self.menuConfig.addAction(self.menuInput_Bit_order.menuAction())
        self.menuConfig.addAction(self.menuMode.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuConfig.menuAction())

        self.retranslateUi(Plotting_Gui)
        QtCore.QMetaObject.connectSlotsByName(Plotting_Gui)

    def retranslateUi(self, Plotting_Gui):
        Plotting_Gui.setWindowTitle(_translate("Plotting_Gui", "Logging App", None))
        self.PortDropDown.setStatusTip(_translate("Plotting_Gui", "Choose what COM Port to use.", None))
        self.BaudDropDown.setStatusTip(_translate("Plotting_Gui", "Choose Baud Rate.", None))
        self.Plot_Button.setStatusTip(_translate("Plotting_Gui", "Start Plotting the selected COM Port\'s data.", None))
        self.Plot_Button.setText(_translate("Plotting_Gui", "Open Port", None))
        self.FFT_button.setStatusTip(_translate("Plotting_Gui", "Plot the Fast Fourier Transform of the data.", None))
        self.FFT_button.setText(_translate("Plotting_Gui", "FFT", None))
        self.Write_Button.setStatusTip(_translate("Plotting_Gui", "Start writing data to file.", None))
        self.Write_Button.setText(_translate("Plotting_Gui", "Write", None))
        self.DualPlot.setStatusTip(_translate("Plotting_Gui", "Willl create a second plot where the FFT of the signal is plotted.", None))
        self.DualPlot.setText(_translate("Plotting_Gui", "Dual Plot signal and FFT", None))
        self.Port_Label.setText(_translate("Plotting_Gui", "Port", None))
        self.Baud_Label.setText(_translate("Plotting_Gui", "Baud Rate", None))
        self.menuFile.setTitle(_translate("Plotting_Gui", "File", None))
        self.menuConfig.setTitle(_translate("Plotting_Gui", "Config", None))
        self.menuFile_type.setStatusTip(_translate("Plotting_Gui", "Change what file format to export to", None))
        self.menuFile_type.setTitle(_translate("Plotting_Gui", "File Type", None))
        self.menuExport_Options.setStatusTip(_translate("Plotting_Gui", "Choose methods of exporting axis data", None))
        self.menuExport_Options.setTitle(_translate("Plotting_Gui", "Export Axis Options", None))
        self.menuInput_Bit_order.setTitle(_translate("Plotting_Gui", "Input Bit order", None))
        self.menuMode.setTitle(_translate("Plotting_Gui", "Mode", None))
        self.actionScan_Ports.setText(_translate("Plotting_Gui", "Scan Ports", None))
        self.actionScan_Ports.setStatusTip(_translate("Plotting_Gui", "Scans for new COM ports", None))
        self.actionScan_Ports.setShortcut(_translate("Plotting_Gui", "Ctrl+W", None))
        self.actionExit.setText(_translate("Plotting_Gui", "Exit", None))
        self.actionExit.setStatusTip(_translate("Plotting_Gui", "Exit Application", None))
        self.actionExit.setShortcut(_translate("Plotting_Gui", "Ctrl+Shift+Z", None))
        self.actionCSV.setText(_translate("Plotting_Gui", ".csv", None))
        self.actionCSV.setStatusTip(_translate("Plotting_Gui", "Use \'.csv\' file type", None))
        self.actionTXT.setText(_translate("Plotting_Gui", ".txt", None))
        self.actionTXT.setStatusTip(_translate("Plotting_Gui", "Use \'.txt\' file type", None))
        self.actionMAT.setText(_translate("Plotting_Gui", ".mat", None))
        self.actionMAT.setStatusTip(_translate("Plotting_Gui", "Use \'.mat\' file type", None))
        # self.actionSeperate_axis.setText(_translate("Plotting_Gui", "Seperate axis", None))
        self.actionSeperate_Axis.setText(_translate("Plotting_Gui", "Seperate Axis", None))
        self.actionSeperate_Axis.setStatusTip(_translate("Plotting_Gui", "Writes two seperate files for each axis, labeled X and Y respectively", None))
        self.actionCombined_Axis.setText(_translate("Plotting_Gui", "Combined Axis", None))
        self.actionCombined_Axis.setStatusTip(_translate("Plotting_Gui", "Writes a single file of two column data in the order X Y", None))
        self.actionCapture_Depth.setText(_translate("Plotting_Gui", "Capture Depth", None))
        self.actionNameSession.setText(_translate("Plotting_Gui", "Name Session", None))
        self.actionNameSession.setStatusTip(_translate("Plotting_Gui", "Set name for current session. Files written this session will begin with this name.", None))
        self.actionNameSession.setShortcut(_translate("Plotting_Gui", "Ctrl+S", None))
        self.actionInput_Bit_Depth.setText(_translate("Plotting_Gui", "Input Bit Depth", None))
        self.actionInput_Bit_Depth.setStatusTip(_translate("Plotting_Gui", "Set the bit depth of the values to be recieved. Packets will be joined to proper size.", None))
        self.actionInput_Bit_Depth.setShortcut(_translate("Plotting_Gui", "Ctrl+B", None))
        self.actionMSB_first.setText(_translate("Plotting_Gui", "MSB first", None))
        self.actionMSB_first.setStatusTip(_translate("Plotting_Gui", "Packets will be joined and resulting value will be treated as a MSB first number", None))
        self.actionLSB_first.setText(_translate("Plotting_Gui", "LSB first", None))
        self.actionLSB_first.setStatusTip(_translate("Plotting_Gui", "Packets will be joined and resulting value will be treated as a LSB first number", None))
        self.actionConsole.setText(_translate("Plotting_Gui", "Console", None))
        self.actionConsole.setStatusTip(_translate("Plotting_Gui", "Opens a Python console for debugging purposes", None))
        self.actionSerial.setText(_translate("Plotting_Gui", "Serial", None))
        self.actionSerial.setStatusTip(_translate("Plotting_Gui", "Using PySerial to interface to serial interfaces. ", None))
        self.actionNI_DAQ.setText(_translate("Plotting_Gui", "NI-DAQ", None))
        self.actionNI_DAQ.setStatusTip(_translate("Plotting_Gui", "Using the PyDAQmx library to interface with NI Data Acquisition cards. (Note: Must have the proper NI Drivers Installed first)", None))

from pyqtgraph import PlotWidget

if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    MainWindow = QtGui.QMainWindow()
    ui = Plotting_Gui()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

